#include <stdio.h>

// Define the process structure
struct process {
    char name;
    int burst_time;
};

int main() {
    // Define the process list with burst time
    struct process processes[] = {
        {'P', 6},
        {'Q', 8},
        {'R', 7},
        {'S', 3}
    };
    int num_processes = sizeof(processes) / sizeof(processes[0]);

    // Sort the processes based on their burst time
    for (int i = 0; i < num_processes - 1; i++) {
        for (int j = i + 1; j < num_processes; j++) {
            if (processes[i].burst_time > processes[j].burst_time) {
                // Swap processes
                struct process temp = processes[i];
                processes[i] = processes[j];
                processes[j] = temp;
            }
        }
    }

    // Initialize the waiting time and turnaround time arrays with 0's
    int waiting_time[num_processes], turnaround_time[num_processes];
    for (int i = 0; i < num_processes; i++) {
        waiting_time[i] = 0;
        turnaround_time[i] = 0;
    }

    // Calculate waiting time and turnaround time for each process
    for (int i = 0; i < num_processes; i++) {
        // Waiting time for current process = sum of burst time of all processes before it
        for (int j = 0; j < i; j++) {
            waiting_time[i] += processes[j].burst_time;
        }
        // Turnaround time for current process = waiting time + burst time
        turnaround_time[i] = waiting_time[i] + processes[i].burst_time;
    }

    // Calculate the total waiting time and total turnaround time
    int total_waiting_time = 0, total_turnaround_time = 0;
    for (int i = 0; i < num_processes; i++) {
        total_waiting_time += waiting_time[i];
        total_turnaround_time += turnaround_time[i];
    }

    // Calculate the average waiting time and average turnaround time
    float avg_waiting_time = (float) total_waiting_time / num_processes;
    float avg_turnaround_time = (float) total_turnaround_time / num_processes;

    // Print the results
    printf("Process\tBurst Time\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < num_processes; i++) {
        printf("%c\t%d\t\t%d\t\t%d\n", processes[i].name, processes[i].burst_time, waiting_time[i], turnaround_time[i]);
    }
    printf("Average Waiting Time: %.2f\n", avg_waiting_time);
    printf("Average Turnaround Time: %.2f\n", avg_turnaround_time);

    return 0;
}

OUTPUT:

Process Burst Time Waiting Time Turnaround Time
S       3           0           3
P       6           3           9
R       7           9           16
Q       8           16          24
Average Waiting Time: 7.00
Average Turnaround Time: 13.00
